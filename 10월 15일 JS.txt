# JavaScript

## LiveScript 라는 이름으로 세상에 탄생

## 프로그래밍 언어의 두가지 유형
  - 컴파일 언어 : 전통적인 대부분의 언어 (C, C++, C#, JAVA 등)
    컴파일이라는 과정을 거침
    오류가 있는 걸 미리 알수 있음
    오류 -> 수정 -> 정상적으로 동작

    사람이 작성한 언어 --> 기계어

  - 인터프리터 언어 : 코드를 바로 라인바이라인으로 읽으면서 실행
    컴파일 언어 대비 느림
    Script
    JS는 자유도가 매~~우 높음 (가장 누더기 언어..더러움)
    
# TypeScript라는 언어의 탄생 배경
  JS의 자유도를 제한하자 딱딱하게(STrict)=엄격하게 규칙을 제한하자 = TS

  JS는 브라우저에서 동작시키기 위해서 생겨난 언어

  웹브라우저에서 무언가를 실행하려고 하면?
  그 유일한 언어가 JS

  TS => JS
  
  모던언어

  사람과 사물을 중심으로 생각

  일상생활의 Object를 중심으로 생각 = 일반인들의 생각

  객체지향 언어 = JAVA 90년대 후반

  -------------------------------------------------

  Object
  백엔드 객체지향
  S.O.L.I.D

  Human 객체
  speak()
  walk()
  work()

  Class 객체
  student()
  subject()

  디자인 패턴(Design Patten)
  4명의 사람이 정했음 Gang of Four
  GoF 디자인 패턴

  *생구행
  생성자 패턴
  구조 패턴
  행위 패턴

  pc에서 서버에서 실행
  SW

  웹서비스
  Client-side 언어 - 고객측에서 동작하는 언어
  Server-side 언어 - 서버측에서 동작

 * Client-side 언어
    장점은?? 내 서버 자원을 쓰지 않는다
    단점은?? 나의 소스코드가 보호 되지 않는다

JS 구현한

웹브라우저에서 돌아감
IE, Edge, FF, Chrome

MS   Mozilla   Google

표준화
표준화 단체
ECMAScript

JS는 모질라 재단을 중심으로 개발이 됨
=> 표준화 단체에서 표준화

ES6가 지금 사용하는 기능

TS 매우매우 최신 언어
==>JS(ES6)


---------------------------------------------

프로그래밍 언어

var a;
var a = 5;

var 좋지 않음 변수의 scope
let const 사용

let

const = constant 상수.. 정해진 값 (한번 정하면 바뀌지 않는 값)

-----------------------

이스케이핑 캐릭터 (₩)
본연의 기능을 못하게 하고, 그냥 문자열로 취급하게 함

------------------------

@오늘 배운 것 중 중요한 것@

  arrow function

  object, 객체를 이해하기
   - ()괄호 안에 여러개의 타입을 포함하고 있는 개체이다.

------------------------

JS로 할수 있는 것은?
  웹 브라우저 내에서 할 수 있는 모~든것을 할 수 있음
  단, 이 웹 브라우저를 벗어나는 건 아무것도 할 수 없음.

이 브라우저가? 이 문서를 다루기 위해서
HTML 이라는 데이터를 HTTP라는 프로토콜로 받아왔음

문서(Document)를 받아
랜더링(Rendering) : 화면에 그림을 그려주는 것
파싱(Parsing) : 구문을 처리하는 것

그 문서를 구조화 해둔 형태를 DOM
Document Object Model

DOM을 한마디로 HTML을 구조화해 트리 구조로 가지고 있는 것

JS의 가장 주된 목적은 이 DOM을 제어하는 것





  